;; Connected to nREPL server - nrepl://localhost:8202
;; CIDER 0.22.0snapshot (package: 20190329.1924), nREPL 0.6.0
;; Clojure 1.10.0, Java 1.8.0_212
;;     Docs: (doc function-name)
;;           (find-doc part-of-name)
;;   Source: (source function-name)
;;  Javadoc: (javadoc java-object-or-class)
;;     Exit: <C-c C-q>
;;  Results: Stored in vars *1, *2, *3, an exception in *e;
;; ======================================================================
;; If you’re new to CIDER it is highly recommended to go through its
;; manual first. Type <M-x cider-view-manual> to view it.
;; In case you’re seeing any warnings you should consult the manual’s
;; "Troubleshooting" section.
;;
;; Here are few tips to get you started:
;;
;; * Press <C-h m> to see a list of the keybindings available (this
;;   will work in every Emacs buffer)
;; * Press <, ,> to quickly invoke some REPL command
;; * Press <, s s> to switch between the REPL and a Clojure file
;; * Press <M-x cider-find-var> to jump to the source of something (e.g. a var, a
;;   Java method)
;; * Press <, h h> to view the documentation for something (e.g.
;;   a var, a Java method)
;; * Enable ‘eldoc-mode’ to display function & method signatures in the minibuffer.
;; * Print CIDER’s refcard and keep it close to your keyboard.
;;
;; CIDER is super customizable - try <M-x customize-group cider> to
;; get a feel for this. If you’re thirsty for knowledge you should try
;; <M-x cider-drink-a-sip>.
;;
;; If you think you’ve encountered a bug (or have some suggestions for
;; improvements) use <M-x cider-report-bug> to report it.
;;
;; Above all else - don’t panic! In case of an emergency - procure
;; some (hard) cider and enjoy it responsibly!
;;
;; You can remove this message with the <M-x cider-repl-clear-help-banner> command.
;; You can disable it from appearing on start by setting
;; ‘cider-repl-display-help-banner’ to nil.
;; ======================================================================
WARNING: No Clojure project was detected. The
refactor-nrepl middleware was not enabled. (You can mute this
warning by customizing `cljr-suppress-no-project-warning'.)To quit, type: :cljs/quit
[:selected :app]
shadow.user> 
cljs.user> (in-ns 'time-align-mobile.handlers)
No application has connected to the REPL server. Make sure your JS environment has loaded your compiled ClojureScript code.
cljs.user> (in-ns 'time-align-mobile.handlers)
time-align-mobile.handlers
time-align-mobile.handlers> fs
#js {:FileSystem #js {:getInfoAsync #object[getInfoAsync], :readAsStringAsync #object[readAsStringAsync], :writeAsStringAsync #object[writeAsStringAsync], :deleteAsync #object[deleteAsync], :moveAsync #object[moveAsync], :copyAsync #object[copyAsync], :makeDirectoryAsync #object[makeDirectoryAsync], :readDirectoryAsync #object[readDirectoryAsync], :downloadAsync #object[downloadAsync], :createDownloadResumable #object[createDownloadResumable], :documentDirectory "file:///data/user/0/host.exp.exponent/files/ExperienceData/%2540jgood%252Ftime-align-mobile/", :cacheDirectory "file:///data/user/0/host.exp.exponent/cache/ExperienceData/%2540jgood%252Ftime-align-mobile/", :bundledAssets nil, :bundleDirectory "asset:///", :EncodingTypes #js {:UTF8 "utf8", :Base64 "base64"}, :DownloadResumable #object[DownloadResumable]}}
time-align-mobile.handlers> (-> fs (.writeAsStringAsync (str document-directory "test") "these are the contents"))
;; output cleared

time-align-mobile.handlers> (-> fs (.-Filesystem) (.writeAsStringAsync (str document-directory "test") "these are the contents"))
;; output cleared

time-align-mobile.handlers> (-> fs (.-FileSystem) (.writeAsStringAsync (str document-directory "test") "these are the contents"))
#object[Promise [object Object]]
time-align-mobile.handlers> (-> fs 
                                (.-FileSystem)
                                (.readAsStringAsync (str document-directory "test"))
                                (.then (fn [result] (println result)) (fn [error] (println (str "error")))))
#object[Promise [object Object]]these are the contents
[:app] Compiling ...
[:app] Build completed. (181 files, 2 compiled, 0 warnings, 0.70s)
[:app] Compiling ...
[:app] Build completed. (182 files, 27 compiled, 0 warnings, 1.34s)
[:app] Compiling ...
[:app] Build completed. (182 files, 27 compiled, 0 warnings, 0.98s)
[:app] Compiling ...
[:app] Build completed. (182 files, 27 compiled, 0 warnings, 0.86s)
[:app] Compiling ...
[:app] Build completed. (182 files, 27 compiled, 0 warnings, 0.90s)
[:app] Compiling ...
[:app] Build completed. (182 files, 27 compiled, 1 warnings, 0.81s)

------ WARNING #1 - :undeclared-var --------------------------------------------
 File: /home/justin/projects/time-align-mobile/src/main/time_align_mobile/js_imports.cljs:143:27
--------------------------------------------------------------------------------
 140 | (defn read-file! [file-name success-callback error-callback]
 141 |   (-> fs
 142 |       (.-FileSystem)
 143 |       (.readAsStringAsync file-path)
---------------------------------^----------------------------------------------
 Use of undeclared Var time-align-mobile.js-imports/file-path
--------------------------------------------------------------------------------
 144 |       (.then success-callback error-callback)))
 145 | 
--------------------------------------------------------------------------------
[:app] Compiling ...
[:app] Build completed. (182 files, 27 compiled, 1 warnings, 0.88s)

------ WARNING #1 - :undeclared-var --------------------------------------------
 File: /home/justin/projects/time-align-mobile/src/main/time_align_mobile/js_imports.cljs:143:27
--------------------------------------------------------------------------------
 140 | (defn read-file-async [file-name success-callback error-callback]
 141 |   (-> fs
 142 |       (.-FileSystem)
 143 |       (.readAsStringAsync file-path)
---------------------------------^----------------------------------------------
 Use of undeclared Var time-align-mobile.js-imports/file-path
--------------------------------------------------------------------------------
 144 |       (.then success-callback error-callback)))
 145 | 
--------------------------------------------------------------------------------
[:app] Compiling ...
[:app] Build completed. (182 files, 27 compiled, 0 warnings, 0.83s)
[:app] Compiling ...
[:app] Build completed. (182 files, 27 compiled, 0 warnings, 0.92s)
[:app] Compiling ...
[:app] Build failure:
------ ERROR -------------------------------------------------------------------
 File: /home/justin/projects/time-align-mobile/src/main/time_align_mobile/app.cljs:126:3
--------------------------------------------------------------------------------
 123 |   (dispatch-sync [:initialize-db])
 124 | 
 125 |   ;; load previous state
 126 |   (
---------^----------------------------------------------------------------------
Error in phase :compilation
ClassCastException: java.lang.String cannot be cast to clojure.lang.IObj
	clojure.core/with-meta--5405 (core.clj:217)
	clojure.core/vary-meta (core.clj:675)
	clojure.core/vary-meta (core.clj:675)
	cljs.analyzer/analyzed (analyzer.cljc:3534)
	cljs.analyzer/analyzed (analyzer.cljc:3528)
	cljs.analyzer/parse-invoke* (analyzer.cljc:3601)
	cljs.analyzer/parse-invoke* (analyzer.cljc:3555)
	cljs.analyzer/parse-invoke (analyzer.cljc:3613)
	cljs.analyzer/parse-invoke (analyzer.cljc:3611)
	cljs.analyzer/analyze-seq* (analyzer.cljc:3846)
	cljs.analyzer/analyze-seq* (analyzer.cljc:3843)
	cljs.analyzer/analyze-seq*-wrap (analyzer.cljc:3850)
	cljs.analyzer/analyze-seq*-wrap (analyzer.cljc:3848)
	cljs.analyzer/analyze-seq (analyzer.cljc:3874)
	cljs.analyzer/analyze-seq (analyzer.cljc:3852)
	cljs.analyzer/analyze-form (analyzer.cljc:4061)
	cljs.analyzer/analyze-form (analyzer.cljc:4058)
	cljs.analyzer/analyze* (analyzer.cljc:4111)
	cljs.analyzer/analyze* (analyzer.cljc:4102)
	cljs.analyzer/analyze (analyzer.cljc:4131)
	cljs.analyzer/analyze (analyzer.cljc:4114)
	cljs.analyzer/analyze (analyzer.cljc:4124)
	cljs.analyzer/analyze (analyzer.cljc:4114)
	cljs.analyzer/analyze (analyzer.cljc:4122)
	cljs.analyzer/analyze (analyzer.cljc:4114)
	cljs.analyzer/analyze-do-statements*/fn--1922 (analyzer.cljc:2215)
	clojure.core/mapv/fn--8430 (core.clj:6912)
	clojure.lang.ArrayChunk.reduce (ArrayChunk.java:63)
	clojure.core.protocols/fn--8139 (protocols.clj:136)
	clojure.core.protocols/fn--8139 (protocols.clj:124)
	clojure.core.protocols/fn--8099/G--8094--8108 (protocols.clj:19)
	clojure.core.protocols/seq-reduce (protocols.clj:31)
	clojure.core.protocols/fn--8129 (protocols.clj:75)
	clojure.core.protocols/fn--8129 (protocols.clj:75)
	clojure.core.protocols/fn--8073/G--8068--8086 (protocols.clj:13)
	clojure.core/reduce (core.clj:6828)
	clojure.core/mapv (core.clj:6903)
	clojure.core/mapv (core.clj:6903)
	cljs.analyzer/analyze-do-statements* (analyzer.cljc:2215)
	cljs.analyzer/analyze-do-statements* (analyzer.cljc:2214)
	cljs.analyzer/analyze-do-statements (analyzer.cljc:2218)
	cljs.analyzer/analyze-do-statements (analyzer.cljc:2217)
	cljs.analyzer/fn--1927 (analyzer.cljc:2222)
	cljs.analyzer/fn--1927 (analyzer.cljc:2220)
	clojure.lang.MultiFn.invoke (MultiFn.java:252)
	cljs.analyzer/analyze-seq* (analyzer.cljc:3845)
	cljs.analyzer/analyze-seq* (analyzer.cljc:3843)
	cljs.analyzer/analyze-seq*-wrap (analyzer.cljc:3850)
	cljs.analyzer/analyze-seq*-wrap (analyzer.cljc:3848)
	cljs.analyzer/analyze-seq (analyzer.cljc:3874)
	cljs.analyzer/analyze-seq (analyzer.cljc:3852)
	cljs.analyzer/analyze-form (analyzer.cljc:4061)
	cljs.analyzer/analyze-form (analyzer.cljc:4058)
	cljs.analyzer/analyze* (analyzer.cljc:4111)
	cljs.analyzer/analyze* (analyzer.cljc:4102)
	cljs.analyzer/analyze (analyzer.cljc:4131)
	cljs.analyzer/analyze (analyzer.cljc:4114)
	cljs.analyzer/analyze (analyzer.cljc:4124)
	cljs.analyzer/analyze (analyzer.cljc:4114)
	cljs.analyzer/analyze (analyzer.cljc:4122)
	cljs.analyzer/analyze (analyzer.cljc:4114)
	cljs.analyzer/analyze-fn-method-body (analyzer.cljc:2017)
	cljs.analyzer/analyze-fn-method-body (analyzer.cljc:2015)
	cljs.analyzer/analyze-fn-method (analyzer.cljc:2039)
	cljs.analyzer/analyze-fn-method (analyzer.cljc:2019)
	cljs.analyzer/analyze-fn-methods-pass2*/fn--1884 (analyzer.cljc:2077)
	clojure.core/mapv/fn--8430 (core.clj:6912)
	clojure.core.protocols/fn--8144 (protocols.clj:168)
	clojure.core.protocols/fn--8144 (protocols.clj:124)
	clojure.core.protocols/fn--8099/G--8094--8108 (protocols.clj:19)
	clojure.core.protocols/seq-reduce (protocols.clj:31)
	clojure.core.protocols/fn--8129 (protocols.clj:75)
	clojure.core.protocols/fn--8129 (protocols.clj:75)
	clojure.core.protocols/fn--8073/G--8068--8086 (protocols.clj:13)
	clojure.core/reduce (core.clj:6828)
	clojure.core/mapv (core.clj:6903)
	clojure.core/mapv (core.clj:6903)
	cljs.analyzer/analyze-fn-methods-pass2* (analyzer.cljc:2077)
	cljs.analyzer/analyze-fn-methods-pass2* (analyzer.cljc:2076)
	cljs.analyzer/analyze-fn-methods-pass2 (analyzer.cljc:2080)

--------------------------------------------------------------------------------
 127 |    "app-db"
 128 |    (fn [value]
 129 |      (when (some? value)
 130 |        ;; If you are trying to use a different default db and it isn't working
--------------------------------------------------------------------------------

[:app] Compiling ...
[:app] Build completed. (182 files, 1 compiled, 0 warnings, 0.07s)
[:app] Compiling ...
[:app] Build completed. (182 files, 2 compiled, 0 warnings, 0.56s)
Running shutdown hook.shutting down ...

shutting down ...

time-align-mobile.handlers> 
*** Closed on Fri Jun 28 19:04:29 2019 ***
