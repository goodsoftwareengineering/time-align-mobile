;; Connected to nREPL server - nrepl://localhost:8202
;; CIDER 0.22.0snapshot (package: 20190329.1924), nREPL 0.6.0
;; Clojure 1.10.0, Java 1.8.0_191
;;     Docs: (doc function-name)
;;           (find-doc part-of-name)
;;   Source: (source function-name)
;;  Javadoc: (javadoc java-object-or-class)
;;     Exit: <C-c C-q>
;;  Results: Stored in vars *1, *2, *3, an exception in *e;
;; ======================================================================
;; If you’re new to CIDER it is highly recommended to go through its
;; manual first. Type <M-x cider-view-manual> to view it.
;; In case you’re seeing any warnings you should consult the manual’s
;; "Troubleshooting" section.
;;
;; Here are few tips to get you started:
;;
;; * Press <C-h m> to see a list of the keybindings available (this
;;   will work in every Emacs buffer)
;; * Press <, ,> to quickly invoke some REPL command
;; * Press <, s s> to switch between the REPL and a Clojure file
;; * Press <M-x cider-find-var> to jump to the source of something (e.g. a var, a
;;   Java method)
;; * Press <, h h> to view the documentation for something (e.g.
;;   a var, a Java method)
;; * Enable ‘eldoc-mode’ to display function & method signatures in the minibuffer.
;; * Print CIDER’s refcard and keep it close to your keyboard.
;;
;; CIDER is super customizable - try <M-x customize-group cider> to
;; get a feel for this. If you’re thirsty for knowledge you should try
;; <M-x cider-drink-a-sip>.
;;
;; If you think you’ve encountered a bug (or have some suggestions for
;; improvements) use <M-x cider-report-bug> to report it.
;;
;; Above all else - don’t panic! In case of an emergency - procure
;; some (hard) cider and enjoy it responsibly!
;;
;; You can remove this message with the <M-x cider-repl-clear-help-banner> command.
;; You can disable it from appearing on start by setting
;; ‘cider-repl-display-help-banner’ to nil.
;; ======================================================================
WARNING: No Clojure project was detected. The
refactor-nrepl middleware was not enabled. (You can mute this
warning by customizing `cljr-suppress-no-project-warning'.)To quit, type: :cljs/quit
[:selected :app]
shadow.user> 
cljs.user> (+ 1 1)
2
cljs.user> (ns time-align-mobile.handlers)
time-align-mobile.handlers
time-align-mobile.handlers> (select-one [:forms sp/ALL :pattern-form :templates] @re-frame.db/app-db)
;; output cleared

time-align-mobile.handlers> (select-one [:forms :pattern-form :templates] @re-frame.db/app-db)
[{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]
time-align-mobile.handlers> (def templates 
[{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}])
#'time-align-mobile.handlers/templates
time-align-mobile.handlers> (transform
                                      [sp/ALL]
                                      (fn [template]
                                        (merge template
                                               {:id          (random-uuid)
                                                :planned     true
                                                :last-edited (js/Date.)})) templates)
[{:planned true, :start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "b7d75554-023a-4c85-bc56-3958a721877e", :last-edited #inst "2019-05-27T21:28:15.496-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "440f1e0b-2137-422d-a156-00d3acdd033d", :last-edited #inst "2019-05-27T21:28:15.496-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]
time-align-mobile.handlers> (def new-periods 
[{:planned true, :start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "b7d75554-023a-4c85-bc56-3958a721877e", :last-edited #inst "2019-05-27T21:28:15.496-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "440f1e0b-2137-422d-a156-00d3acdd033d", :last-edited #inst "2019-05-27T21:28:15.496-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}])
#'time-align-mobile.handlers/new-periods
time-align-mobile.handlers> @re-frame.db/app-db
;; output cleared

time-align-mobile.handlers> (def app-db 
{:active-filter nil, :time-navigators {:day #inst "2019-05-04T04:00:00.000-00:00", :calendar #inst "2019-05-04T21:05:42.082-00:00", :report #inst "2019-05-04T21:05:42.082-00:00"}, :now #inst "2019-05-27T21:29:04.530-00:00", :config {:auto-log-time-align true}, :filters [{:id #uuid "bbc34081-38d4-4d4f-ab19-a7cef18c1212", :label "sort by bucket label", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort {:path [:bucket-label], :ascending true}, :predicates []} {:id #uuid "aad94081-38d4-4d4f-ab19-a7cef18c1299", :label "sort by label", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:bucket :filter :period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort {:path [:label], :ascending true}, :predicates []} {:id #uuid "cccc4081-38d4-4d4f-ab19-a7cef18c4444", :label "time align bucket filter", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort nil, :predicates [{:path [:bucket-id], :value "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :negate false}]}], :patterns [{:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label "an example pattern", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data {}, :templates [{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}], :navigation {:current-screen :day, :params nil}, :period-in-play-id nil, :buckets [{:id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :label "time align", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data {}, :color "#11aa11", :periods [{:id #uuid "a8404f81-38d4-4d4f-ab19-a7cef18c4531", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-04T20:15:42.081-00:00", :stop #inst "2019-05-04T23:16:42.081-00:00", :data {}} {:id #uuid "76e830ad-645c-46f4-accd-bbb59024592a", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}} {:id #uuid "39004163-9ce8-4c4a-93fe-14952a811bf4", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned true, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}}]}], :selected-period nil, :forms {:bucket-form {:id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :label "time align", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data "{}", :color "#11aa11", :periods [{:id #uuid "a8404f81-38d4-4d4f-ab19-a7cef18c4531", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-04T20:15:42.081-00:00", :stop #inst "2019-05-04T23:16:42.081-00:00", :data {}} {:id #uuid "76e830ad-645c-46f4-accd-bbb59024592a", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}} {:id #uuid "39004163-9ce8-4c4a-93fe-14952a811bf4", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned true, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}}]}, :period-form nil, :pattern-form {:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label "an example pattern", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data "{}", :templates [{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}, :template-form {:planned true, :bucket-label "time align", :start 56161203, :pattern-id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :bucket-color "#11aa11", :data "{}"}, :filter-form nil}, :selected-template #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647"})
WARNING: app-db already refers to: time-align-mobile.db/app-db being replaced by: time-align-mobile.handlers/app-db (<stdin> at 1:1)
#'time-align-mobile.db/app-db
time-align-mobile.handlers> (defn apply-pattern-to-displayed-day [db [_ {:keys [pattern-id new-periods]}]]
  (let [displayed-day     (get-in db [:time-navigators :day])
        pattern           (->> db
                               (select-one [:patterns sp/ALL
                                            #(= (:id %) pattern-id)]))

        all-bucket-ids (->> new-periods
                            (select [sp/ALL :bucket-id]))]

    ;; put the periods in the buckets
    (->> db
         (transform [:buckets sp/ALL
                     #(some #{(:id %)} all-bucket-ids)]

                    ;; go through all buckets and transform with this function
                    (fn [bucket]
                      (let [old-period-list (:periods bucket)

                            ;; go through all periods to add
                            periods-to-add
                            (->> new-periods
                                 ;; should they be added to this bucket?
                                 (filter #(= (:bucket-id %)
                                             (:id bucket)))
                                 ;; put a valid period in the bucket
                                 (partial
                                  pseudo-template->perfect-period
                                  displayed-day))]
                        (merge bucket
                               {:periods (into old-period-list
                                               periods-to-add)})))))))
WARNING: Use of undeclared Var time-align-mobile.handlers/pseudo-template->perfect-period (<stdin> at 27:35)
#'time-align-mobile.handlers/apply-pattern-to-displayed-day
time-align-mobile.handlers> (def pattern-id (get-in app-db [:forms :pattern-form :id]))
#'time-align-mobile.handlers/pattern-id
time-align-mobile.handlers> pattern-id
#uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465"
time-align-mobile.handlers> (def new-app-db (apply-pattern-to-displayed-day app-db [:no-op {:pattern-id pattenr-id :new-periods new-periods}]))
;; output cleared

time-align-mobile.handlers> (def new-app-db (apply-pattern-to-displayed-day app-db [:no-op {:pattern-id pattern-id :new-periods new-periods}]))
;; output cleared

time-align-mobile.handlers> (get-in app-db [:time-navigators :day])
#inst "2019-05-04T04:00:00.000-00:00"
time-align-mobile.handlers> (->> app-db
                               (select-one [:patterns sp/ALL
                                            #(= (:id %) pattern-id)]))
{:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label "an example pattern", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data {}, :templates [{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}
time-align-mobile.handlers> (->> new-periods
                            (select [sp/ALL :bucket-id]))
[#uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2" #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2"]
time-align-mobile.handlers> (def displayed-day     (get-in app-db [:time-navigators :day]))
#'time-align-mobile.handlers/displayed-day
time-align-mobile.handlers> (def pattern           (->> app-db
                               (select-one [:patterns sp/ALL
                                            #(= (:id %) pattern-id)])))

#'time-align-mobile.handlers/pattern
time-align-mobile.handlers> (def all-bucket-ids (->> new-periods
                            (select [sp/ALL :bucket-id])))
#'time-align-mobile.handlers/all-bucket-ids
time-align-mobile.handlers> (->> app-db
         (transform [:buckets sp/ALL
                     #(some #{(:id %)} all-bucket-ids)]

                    ;; go through all buckets and transform with this function
                    (fn [bucket]
                      (let [old-period-list (:periods bucket)

                            ;; go through all periods to add
                            periods-to-add
                            (->> new-periods
                                 ;; should they be added to this bucket?
                                 (filter #(= (:bucket-id %)
                                             (:id bucket)))
                                 ;; put a valid period in the bucket
                                 (partial
                                  pseudo-template->perfect-period
                                  displayed-day))]
                        (merge bucket
                               {:periods (into old-period-list
                                               periods-to-add)})))))
WARNING: Use of undeclared Var time-align-mobile.handlers/pseudo-template->perfect-period (<stdin> at 17:35)
cljs$core$seq@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:15002:30
cljs$core$IFn$_invoke$arity$3@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:18490:33
cljs$core$IFn$_invoke$arity$3@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:18662:72
cljs$core$IFn$_invoke$arity$2@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:30147:110
cljs$core$into@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:30124:60

com$rpl$specter$impl$terminal_STAR_@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:284516:105
http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:284524:49
com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:286284:127
com$rpl$specter$impl$exec_transform_STAR_@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:283799:81
http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:284049:61
http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:296742:196
G__28675__2@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:28457:107
http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:31324:89
http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:31325:16
cljs$core$IReduce$_reduce$arity$3@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:31342:10
cljs$core$IFn$_invoke$arity$3@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:12892:52
cljs$core$IFn$_invoke$arity$3@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:18648:61
cljs$core$IFn$_invoke$arity$4@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:18768:61
cljs$core$IFn$_invoke$arity$3@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:30158:111
com$rpl$specter$navs$AllTransformProtocol$all_transform$arity$2@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:294723:56
com$rpl$specter$navs$all_transform@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:294638:87
com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:296746:50
com$rpl$specter$impl$exec_transform_STAR_@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:283799:81
http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:284049:61
http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:295734:126
com$rpl$specter$navs$do_keypath_transform@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:295735:6
com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:295790:57
com$rpl$specter$impl$exec_transform_STAR_@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:283799:81
com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:284047:57
com$rpl$specter$impl$exec_transform_STAR_@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:283799:81
com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:284047:57
com$rpl$specter$impl$exec_transform_STAR_@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:283799:81
com$rpl$specter$impl$compiled_transform_STAR_@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:284523:53
eval code
eval@[native code]
http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:81368:20
shadow$cljs$devtools$client$env$repl_call@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:80501:117
shadow$cljs$devtools$client$react_native$repl_invoke@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:81366:59
shadow$cljs$devtools$client$react_native$handle_message@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:81439:68
shadow$cljs$devtools$client$env$process_ws_msg@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:80648:113
http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:81506:62
dispatchEvent@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:104123:31
http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:105282:31
emit@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:83361:42
__callFunction@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:82656:49
http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:82429:31
__guard@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:82610:15
callFunctionReturnFlushedQueue@http://192.168.1.71:19001/./app/index.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=%2Fhome%2Fjustin%2Fprojects%2Ftime-align-mobile%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles.js:82428:21
callFunctionReturnFlushedQueue@[native code]
time-align-mobile.handlers> (defn pseudo-template->perfect-period [displayed-day period-to-be]
  (-> period-to-be
      (merge
       {:start
        (helpers/reset-relative-ms
         (:start period-to-be)
         displayed-day)
        :stop
        (helpers/reset-relative-ms
         (:stop period-to-be)
         displayed-day)})
      (select-keys (keys period-data-spec))))
#'time-align-mobile.handlers/pseudo-template->perfect-period
time-align-mobile.handlers> (->> app-db
         (transform [:buckets sp/ALL
                     #(some #{(:id %)} all-bucket-ids)]

                    ;; go through all buckets and transform with this function
                    (fn [bucket]
                      (let [old-period-list (:periods bucket)

                            ;; go through all periods to add
                            periods-to-add
                            (->> new-periods
                                 ;; should they be added to this bucket?
                                 (filter #(= (:bucket-id %)
                                             (:id bucket)))
                                 ;; put a valid period in the bucket
                                 (partial
                                  pseudo-template->perfect-period
                                  displayed-day))]
                        (merge bucket
                               {:periods (into old-period-list
                                               periods-to-add)})))))
;; output cleared

time-align-mobile.handlers> all-bucket-ids
[#uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2" #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2"]
time-align-mobile.handlers> (some #{#uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2"} all-bucket-ids)
#uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2"
time-align-mobile.handlers> (some #{1} all-bucket-ids)
nil
time-align-mobile.handlers> (some? (some #{#uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2"} all-bucket-ids))
true
time-align-mobile.handlers> (some? (some #{1} all-bucket-ids))
false[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.58s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.55s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.53s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.59s)

time-align-mobile.handlers> (->> 1)
1
time-align-mobile.handlers> (->> 1 (partial (+ 1)))
#object[G__28186]
time-align-mobile.handlers> (->> 1 ((partial (+ 1))))
;; output cleared

time-align-mobile.handlers> (->> 1 (#(partial (+ 1))))
1
time-align-mobile.handlers> (->> 1 #(+ 1 %))
;; output cleared

time-align-mobile.handlers> (->> 1 (#(+ 1 %)))
2[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.51s)

time-align-mobile.handlers> (defn apply-pattern-to-displayed-day [db [_ {:keys [pattern-id new-periods]}]]
  (let [displayed-day     (get-in db [:time-navigators :day])
        pattern           (->> db
                               (select-one [:patterns sp/ALL
                                            #(= (:id %) pattern-id)]))

        all-bucket-ids (->> new-periods
                            (select [sp/ALL :bucket-id]))]

    ;; put the periods in the buckets
    (->> db
         (transform [:buckets sp/ALL
                     ;; find the buckets that need to be transformed
                     #(some? (some #{(:id %)} all-bucket-ids))]

                    (fn [bucket]
                      (let [old-period-list (:periods bucket)

                            periods-to-add
                            (->> new-periods
                                 ;; select periods for this bucket
                                 (filter #(= (:bucket-id %)
                                             (:id bucket)))

                                 ;; make the period valid
                                 (#(pseudo-template->perfect-period
                                  displayed-day %)))]

                        ;; put the periods in the bucket
                        (merge bucket
                               {:periods (into old-period-list
                                               periods-to-add)})))))))
#'time-align-mobile.handlers/apply-pattern-to-displayed-day
time-align-mobile.handlers> (apply-pattern-to-displayed-day app-db [:no-op {:pattern-id pattern-id :new-periods new-periods}])
WARNING: Use of undeclared Var time-align-mobile.handlers/pattern-id (<stdin> at 1:61)
WARNING: Use of undeclared Var time-align-mobile.handlers/new-periods (<stdin> at 1:85)
{:active-filter nil, :time-navigators {:day #inst "2019-05-04T04:00:00.000-00:00", :calendar #inst "2019-05-04T21:05:42.082-00:00", :report #inst "2019-05-04T21:05:42.082-00:00"}, :now #inst "2019-05-27T21:29:04.530-00:00", :config {:auto-log-time-align true}, :filters [{:id #uuid "bbc34081-38d4-4d4f-ab19-a7cef18c1212", :label "sort by bucket label", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort {:path [:bucket-label], :ascending true}, :predicates []} {:id #uuid "aad94081-38d4-4d4f-ab19-a7cef18c1299", :label "sort by label", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:bucket :filter :period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort {:path [:label], :ascending true}, :predicates []} {:id #uuid "cccc4081-38d4-4d4f-ab19-a7cef18c4444", :label "time align bucket filter", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort nil, :predicates [{:path [:bucket-id], :value "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :negate false}]}], :patterns [{:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label "an example pattern", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data {}, :templates [{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}], :navigation {:current-screen :day, :params nil}, :period-in-play-id nil, :buckets [{:id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :label "time align", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data {}, :color "#11aa11", :periods [{:id #uuid "a8404f81-38d4-4d4f-ab19-a7cef18c4531", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-04T20:15:42.081-00:00", :stop #inst "2019-05-04T23:16:42.081-00:00", :data {}} {:id #uuid "76e830ad-645c-46f4-accd-bbb59024592a", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}} {:id #uuid "39004163-9ce8-4c4a-93fe-14952a811bf4", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned true, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}}]}], :selected-period nil, :forms {:bucket-form {:id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :label "time align", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data "{}", :color "#11aa11", :periods [{:id #uuid "a8404f81-38d4-4d4f-ab19-a7cef18c4531", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-04T20:15:42.081-00:00", :stop #inst "2019-05-04T23:16:42.081-00:00", :data {}} {:id #uuid "76e830ad-645c-46f4-accd-bbb59024592a", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}} {:id #uuid "39004163-9ce8-4c4a-93fe-14952a811bf4", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned true, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}}]}, :period-form nil, :pattern-form {:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label "an example pattern", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data "{}", :templates [{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}, :template-form {:planned true, :bucket-label "time align", :start 56161203, :pattern-id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :bucket-color "#11aa11", :data "{}"}, :filter-form nil}, :selected-template #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647"}[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.48s)

time-align-mobile.handlers> (-> {:a "b"} (merge {}))
{:a "b"}
time-align-mobile.handlers> (-> {:a "b"} (merge {:c "d"}))
{:a "b", :c "d"}
time-align-mobile.handlers> (-> {:a "b"} (merge {:c "d"}) (select-keys [:c]))
{:c "d"}
time-align-mobile.handlers> (def new-app-db {:active-filter nil, :time-navigators {:day #inst "2019-05-04T04:00:00.000-00:00", :calendar #inst "2019-05-04T21:05:42.082-00:00", :report #inst "2019-05-04T21:05:42.082-00:00"}, :now #inst "2019-05-27T21:29:04.530-00:00", :config {:auto-log-time-align true}, :filters [{:id #uuid "bbc34081-38d4-4d4f-ab19-a7cef18c1212", :label "sort by bucket label", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort {:path [:bucket-label], :ascending true}, :predicates []} {:id #uuid "aad94081-38d4-4d4f-ab19-a7cef18c1299", :label "sort by label", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:bucket :filter :period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort {:path [:label], :ascending true}, :predicates []} {:id #uuid "cccc4081-38d4-4d4f-ab19-a7cef18c4444", :label "time align bucket filter", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort nil, :predicates [{:path [:bucket-id], :value "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :negate false}]}], :patterns [{:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label "an example pattern", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data {}, :templates [{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}], :navigation {:current-screen :day, :params nil}, :period-in-play-id nil, :buckets [{:id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :label "time align", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data {}, :color "#11aa11", :periods [{:id #uuid "a8404f81-38d4-4d4f-ab19-a7cef18c4531", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-04T20:15:42.081-00:00", :stop #inst "2019-05-04T23:16:42.081-00:00", :data {}} {:id #uuid "76e830ad-645c-46f4-accd-bbb59024592a", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}} {:id #uuid "39004163-9ce8-4c4a-93fe-14952a811bf4", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned true, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}}]}], :selected-period nil, :forms {:bucket-form {:id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :label "time align", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data "{}", :color "#11aa11", :periods [{:id #uuid "a8404f81-38d4-4d4f-ab19-a7cef18c4531", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-04T20:15:42.081-00:00", :stop #inst "2019-05-04T23:16:42.081-00:00", :data {}} {:id #uuid "76e830ad-645c-46f4-accd-bbb59024592a", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}} {:id #uuid "39004163-9ce8-4c4a-93fe-14952a811bf4", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned true, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}}]}, :period-form nil, :pattern-form {:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label "an example pattern", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data "{}", :templates [{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}, :template-form {:planned true, :bucket-label "time align", :start 56161203, :pattern-id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :bucket-color "#11aa11", :data "{}"}, :filter-form nil}, :selected-template #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647"})
#'time-align-mobile.handlers/new-app-db
time-align-mobile.handlers> (clojure.data/diff app-db new-app-db)
[nil nil {:active-filter nil, :time-navigators {:day #inst "2019-05-04T04:00:00.000-00:00", :calendar #inst "2019-05-04T21:05:42.082-00:00", :report #inst "2019-05-04T21:05:42.082-00:00"}, :now #inst "2019-05-27T21:29:04.530-00:00", :config {:auto-log-time-align true}, :filters [{:id #uuid "bbc34081-38d4-4d4f-ab19-a7cef18c1212", :label "sort by bucket label", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort {:path [:bucket-label], :ascending true}, :predicates []} {:id #uuid "aad94081-38d4-4d4f-ab19-a7cef18c1299", :label "sort by label", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:bucket :filter :period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort {:path [:label], :ascending true}, :predicates []} {:id #uuid "cccc4081-38d4-4d4f-ab19-a7cef18c4444", :label "time align bucket filter", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort nil, :predicates [{:path [:bucket-id], :value "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :negate false}]}], :patterns [{:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label "an example pattern", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data {}, :templates [{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}], :navigation {:current-screen :day, :params nil}, :period-in-play-id nil, :buckets [{:id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :label "time align", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data {}, :color "#11aa11", :periods [{:id #uuid "a8404f81-38d4-4d4f-ab19-a7cef18c4531", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-04T20:15:42.081-00:00", :stop #inst "2019-05-04T23:16:42.081-00:00", :data {}} {:id #uuid "76e830ad-645c-46f4-accd-bbb59024592a", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}} {:id #uuid "39004163-9ce8-4c4a-93fe-14952a811bf4", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned true, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}}]}], :selected-period nil, :forms {:bucket-form {:id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :label "time align", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data "{}", :color "#11aa11", :periods [{:id #uuid "a8404f81-38d4-4d4f-ab19-a7cef18c4531", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-04T20:15:42.081-00:00", :stop #inst "2019-05-04T23:16:42.081-00:00", :data {}} {:id #uuid "76e830ad-645c-46f4-accd-bbb59024592a", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}} {:id #uuid "39004163-9ce8-4c4a-93fe-14952a811bf4", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned true, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}}]}, :period-form nil, :pattern-form {:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label "an example pattern", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data "{}", :templates [{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}, :template-form {:planned true, :bucket-label "time align", :start 56161203, :pattern-id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :bucket-color "#11aa11", :data "{}"}, :filter-form nil}, :selected-template #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647"}]
time-align-mobile.handlers> (pseudo-template->perfect-period displayed-day (first new-periods))
WARNING: Use of undeclared Var time-align-mobile.handlers/displayed-day (<stdin> at 1:34)
WARNING: Use of undeclared Var time-align-mobile.handlers/new-periods (<stdin> at 1:55)
{:id #uuid "b7d75554-023a-4c85-bc56-3958a721877e", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-27T21:28:15.496-00:00", :label "do something in time align", :planned true, :start #inst "2019-05-04T16:35:00.000-00:00", :stop #inst "2019-05-04T18:00:00.000-00:00", :data {}}[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.13s)

time-align-mobile.handlers> (first new-periods)
WARNING: Use of undeclared Var time-align-mobile.handlers/new-periods (<stdin> at 1:8)
{:planned true, :start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "b7d75554-023a-4c85-bc56-3958a721877e", :last-edited #inst "2019-05-27T21:28:15.496-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}
time-align-mobile.handlers>                     (->> new-periods
                                 ;; select periods for this bucket
                                 (filter #(= (:bucket-id %)
#uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2"
                                             )))


WARNING: Use of undeclared Var time-align-mobile.handlers/new-periods (<stdin> at 1:26)
({:planned true, :start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "b7d75554-023a-4c85-bc56-3958a721877e", :last-edited #inst "2019-05-27T21:28:15.496-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "440f1e0b-2137-422d-a156-00d3acdd033d", :last-edited #inst "2019-05-27T21:28:15.496-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}})[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 1 warnings, 0.46s)

------ WARNING #1 - :undeclared-var --------------------------------------------
 File: /home/justin/projects/time-align-mobile/src/main/time_align_mobile/handlers.cljs:744:54
--------------------------------------------------------------------------------
 741 | 
 742 |                                  ;; make the periods valid
 743 |                                  (map (pseudo-template->perfect-period
 744 |                                        displayed-day %)))]
------------------------------------------------------------^-------------------
 Use of undeclared Var time-align-mobile.handlers/%
--------------------------------------------------------------------------------
 745 | 
 746 |                         ;; put the periods in the bucket
 747 |                         (merge bucket
 748 |                                {:periods (into old-period-list
--------------------------------------------------------------------------------
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.47s)

time-align-mobile.handlers> (defn apply-pattern-to-displayed-day [db [_ {:keys [pattern-id new-periods]}]]
  (let [displayed-day     (get-in db [:time-navigators :day])
        pattern           (->> db
                               (select-one [:patterns sp/ALL
                                            #(= (:id %) pattern-id)]))

        all-bucket-ids (->> new-periods
                            (select [sp/ALL :bucket-id]))]

    ;; put the periods in the buckets
    (->> db
         (transform [:buckets sp/ALL
                     ;; find the buckets that need to be transformed
                     #(some? (some #{(:id %)} all-bucket-ids))]

                    (fn [bucket]
                      (let [old-period-list (:periods bucket)

                            periods-to-add
                            (->> new-periods
                                 ;; select periods for this bucket
                                 (filter #(= (:bucket-id %)
                                             (:id bucket)))

                                 ;; make the periods valid
                                 (map #(pseudo-template->perfect-period
                                       displayed-day %)))]

                        ;; put the periods in the bucket
                        (merge bucket
                               {:periods (into old-period-list
                                               periods-to-add)})))))))
#'time-align-mobile.handlers/apply-pattern-to-displayed-day
time-align-mobile.handlers> (def new-app-db (apply-pattern-to-displayed-day app-db [:no-op {:pattern-id pattern-id :new-periods new-periods}]))
WARNING: Use of undeclared Var time-align-mobile.handlers/pattern-id (<stdin> at 1:77)
WARNING: Use of undeclared Var time-align-mobile.handlers/new-periods (<stdin> at 1:101)
#'time-align-mobile.handlers/new-app-db
time-align-mobile.handlers> (clojure.data/diff app-db new-app-db)
(nil {:buckets [{:periods [nil nil nil {:id #uuid "b7d75554-023a-4c85-bc56-3958a721877e", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-27T21:28:15.496-00:00", :label "do something in time align", :planned true, :start #inst "2019-05-04T16:35:00.000-00:00", :stop #inst "2019-05-04T18:00:00.000-00:00", :data {}} {:id #uuid "440f1e0b-2137-422d-a156-00d3acdd033d", :created #inst "2019-05-05T19:36:01.203-00:00", :last-edited #inst "2019-05-27T21:28:15.496-00:00", :label "second template", :planned true, :start #inst "2019-05-04T19:36:01.203-00:00", :stop #inst "2019-05-04T19:41:01.203-00:00", :data {}}]}]} {:active-filter nil, :time-navigators {:day #inst "2019-05-04T04:00:00.000-00:00", :calendar #inst "2019-05-04T21:05:42.082-00:00", :report #inst "2019-05-04T21:05:42.082-00:00"}, :now #inst "2019-05-27T21:29:04.530-00:00", :config {:auto-log-time-align true}, :filters [{:id #uuid "bbc34081-38d4-4d4f-ab19-a7cef18c1212", :label "sort by bucket label", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort {:path [:bucket-label], :ascending true}, :predicates []} {:id #uuid "aad94081-38d4-4d4f-ab19-a7cef18c1299", :label "sort by label", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:bucket :filter :period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort {:path [:label], :ascending true}, :predicates []} {:id #uuid "cccc4081-38d4-4d4f-ab19-a7cef18c4444", :label "time align bucket filter", :created #inst "2019-05-04T21:05:42.081-00:00", :compatible [:period :template], :last-edited #inst "2019-05-04T21:05:42.081-00:00", :sort nil, :predicates [{:path [:bucket-id], :value "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :negate false}]}], :patterns [{:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label "an example pattern", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data {}, :templates [{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}], :navigation {:current-screen :day, :params nil}, :period-in-play-id nil, :buckets [{:periods [{:id #uuid "a8404f81-38d4-4d4f-ab19-a7cef18c4531", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-04T20:15:42.081-00:00", :stop #inst "2019-05-04T23:16:42.081-00:00", :data {}} {:id #uuid "76e830ad-645c-46f4-accd-bbb59024592a", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}} {:id #uuid "39004163-9ce8-4c4a-93fe-14952a811bf4", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned true, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}}], :color "#11aa11", :data {}, :last-edited #inst "2019-05-04T21:05:42.081-00:00", :created #inst "2019-05-04T21:05:42.081-00:00", :label "time align", :id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2"}], :selected-period nil, :forms {:bucket-form {:id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :label "time align", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data "{}", :color "#11aa11", :periods [{:id #uuid "a8404f81-38d4-4d4f-ab19-a7cef18c4531", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-04T20:15:42.081-00:00", :stop #inst "2019-05-04T23:16:42.081-00:00", :data {}} {:id #uuid "76e830ad-645c-46f4-accd-bbb59024592a", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned false, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}} {:id #uuid "39004163-9ce8-4c4a-93fe-14952a811bf4", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :label "start using", :planned true, :start #inst "2019-05-03T21:10:42.081-00:00", :stop #inst "2019-05-04T00:11:42.081-00:00", :data {}}]}, :period-form nil, :pattern-form {:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label "an example pattern", :created #inst "2019-05-04T21:05:42.081-00:00", :last-edited #inst "2019-05-04T21:05:42.081-00:00", :data "{}", :templates [{:start 45300000, :created #inst "2019-05-04T21:05:42.081-00:00", :stop 50400000, :label "do something in time align", :id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :last-edited #inst "2019-05-05T19:48:35.023-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}} {:planned true, :start 56161203, :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}, :template-form {:planned true, :bucket-label "time align", :start 56161203, :pattern-id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :created #inst "2019-05-05T19:36:01.203-00:00", :stop 56461203, :label "second template", :id #uuid "76a707f0-d4c5-4917-b43f-e060764ffcb5", :last-edited #inst "2019-05-05T20:02:46.155-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :bucket-color "#11aa11", :data "{}"}, :filter-form nil}, :selected-template #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647"})[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.47s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.51s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 1 warnings, 0.41s)

------ WARNING #1 - :undeclared-var --------------------------------------------
 File: /home/justin/projects/time-align-mobile/src/main/time_align_mobile/handlers.cljs:746:31
--------------------------------------------------------------------------------
 743 |                                         displayed-day %)))]
 744 | 
 745 |                         ;; put the periods in the bucket
 746 |                         (into old-period-list periods-to-add)))))))
-------------------------------------^------------------------------------------
 Use of undeclared Var time-align-mobile.handlers/old-period-list
--------------------------------------------------------------------------------
 747 | 
 748 | (reg-event-db :initialize-db [validate-spec] initialize-db)
 749 | (reg-event-fx :navigate-to [validate-spec persist-secure-store] navigate-to)
 750 | (reg-event-db :load-bucket-form [validate-spec persist-secure-store] load-bucket-form)
--------------------------------------------------------------------------------
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.46s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.47s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.48s)
{:pattern-id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :new-periods {:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label an example pattern, :created #inst "2019-05-27T22:43:06.461-00:00", :last-edited #inst "2019-05-27T22:43:06.461-00:00", :data {}, :templates [{:planned true, :start 45000000, :created #inst "2019-05-27T22:44:30.095-00:00", :stop 50400000, :label do something in time align, :id #uuid "3df8ab12-3116-4368-ad41-8925da34b0ee", :last-edited #inst "2019-05-27T22:44:30.095-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}}
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.49s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.47s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.49s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.12s)
getting called!
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.13s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.10s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.10s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.13s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.12s)
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.12s)
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.12s)
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
just print something
this button was pressed
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.11s)
what about here
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.11s)
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.45s)
how about hereerere
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.47s)
{:pattern-id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :new-periods {:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label an example pattern, :created #inst "2019-05-27T22:43:06.461-00:00", :last-edited #inst "2019-05-27T22:43:06.461-00:00", :data {}, :templates [{:planned true, :start 45000000, :created #inst "2019-05-27T22:52:17.692-00:00", :stop 50400000, :label do something in time align, :id #uuid "06dd789d-0655-437f-ad90-5dc0eee7c861", :last-edited #inst "2019-05-27T22:52:17.692-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}]}, :displayed-day #inst "2019-05-27T22:43:06.461-00:00", :pattern {:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label an example pattern, :created #inst "2019-05-27T22:43:06.461-00:00", :last-edited #inst "2019-05-27T22:43:06.461-00:00", :data {}, :templates [{:id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :label do something in time align, :created #inst "2019-05-27T22:43:06.461-00:00", :last-edited #inst "2019-05-27T22:43:06.461-00:00", :data {}, :start 45000000, :stop 50400000}]}, :all-bucket-ids [nil nil nil nil nil nil]}
[:app] Compiling ...
[:app] Build completed. (180 files, 2 compiled, 0 warnings, 0.11s)
{:pattern-id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :new-periods ({:planned true, :start 45000000, :created #inst "2019-05-27T22:55:46.839-00:00", :stop 50400000, :label do something in time align, :id #uuid "f819b93a-b6da-401f-8213-60303b5321bc", :last-edited #inst "2019-05-27T22:55:46.839-00:00", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :data {}}), :displayed-day #inst "2019-05-27T22:43:06.461-00:00", :pattern {:id #uuid "ffa49881-38d4-4d4f-ab19-a7cef18c4465", :label an example pattern, :created #inst "2019-05-27T22:43:06.461-00:00", :last-edited #inst "2019-05-27T22:43:06.461-00:00", :data {}, :templates [{:id #uuid "bb9b9881-38d4-4d4f-ab19-a7cef18c6647", :bucket-id #uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2", :label do something in time align, :created #inst "2019-05-27T22:43:06.461-00:00", :last-edited #inst "2019-05-27T22:43:06.461-00:00", :data {}, :start 45000000, :stop 50400000}]}, :all-bucket-ids [#uuid "a7396f81-38d4-4d4f-ab19-a7cef18c4ea2"]}

time-align-mobile.handlers> 