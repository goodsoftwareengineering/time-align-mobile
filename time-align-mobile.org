#+TODO: TODO DOSUB | DONE CANCELED 

* Time Align Mobile
  :LOGBOOK:
  CLOCK: [2018-09-21 Fri 07:39]--[2018-09-21 Fri 07:40] =>  0:01
  CLOCK: [2018-08-29 Wed 14:41]--[2018-08-29 Wed 14:46] =>  0:05
  CLOCK: [2018-08-19 Sun 16:05]--[2018-08-19 Sun 16:09] =>  0:04
  CLOCK: [2018-08-19 Sun 15:56]--[2018-08-19 Sun 16:05] =>  0:09
  CLOCK: [2018-08-18 Sat 15:07]--[2018-08-18 Sat 15:11] =>  0:04
  CLOCK: [2018-07-17 Tue 18:58]--[2018-07-17 Tue 19:17] =>  0:19
  :END:
** DOSUB Screens
*** DOSUB Report
**** TODO Summary
**** TODO Info
*** TODO Calendar
** DOSUB Reusable Components
*** TODO Time-nav
    :LOGBOOK:
    CLOCK: [2018-11-17 Sat 11:47]--[2018-11-17 Sat 11:49] =>  0:02
    :END:

*** TODO Time-range
** DOSUB Misc
   :LOGBOOK:
   CLOCK: [2019-03-16 Sat 13:07]--[2019-03-16 Sat 13:08] =>  0:01
   CLOCK: [2018-07-23 Mon 08:53]--[2018-07-23 Mon 08:54] =>  0:01
   :END:
*** TODO Interesting idea for background processes

https://medium.com/@inkdrop/a-simple-way-to-run-js-in-background-thread-on-react-native-8fff345576da

*** TODO Use cofx to insert uuid instead of putting (random-uuid) on dispatches
*** TODO Refactor specter selections and transformations into functions

Don't want all those path's defined over and over again.

*** TODO Move all modal visibility to app-state
*** TODO Add filters to select (period/template/bucket) modals
*** TODO Import
    :LOGBOOK:
    CLOCK: [2018-12-03 Mon 18:00]--[2018-12-03 Mon 18:24] =>  0:24
    :END:
Eventually something cool like drop box integration.
Mostly likely a past text input for the app-db in edn or json, possibly a url to go grab it.
Might have to wait for a share reciever expo api, or detach.

*** DOSUB Overhaul style with react native elements
    :LOGBOOK:
    CLOCK: [2019-03-16 Sat 19:39]--[2019-03-16 Sat 19:40] =>  0:01
    CLOCK: [2019-03-16 Sat 13:08]--[2019-03-16 Sat 13:38] =>  0:30
    :END:
**** TODO Inputs on forms
     :LOGBOOK:
     CLOCK: [2019-03-17 Sun 16:34]--[2019-03-17 Sun 16:44] =>  0:10
     CLOCK: [2019-03-17 Sun 15:18]--[2019-03-17 Sun 16:29] =>  1:11
     CLOCK: [2019-03-17 Sun 14:27]--[2019-03-17 Sun 14:27] =>  0:00
     CLOCK: [2019-03-16 Sat 19:40]--[2019-03-16 Sat 21:26] =>  1:46
     :END:
   - [X] Bucket
   - [ ] Period
   - [ ] Template
   - [ ] Filter
   - [ ] Shared components

**** TODO Fix something I broke and then play with spec'ing functions
     :LOGBOOK:
     CLOCK: [2019-03-22 Fri 19:32]--[2019-03-22 Fri 20:41] =>  1:09
     :END:
**** DOSUB Day
     :LOGBOOK:
     CLOCK: [2019-03-23 Sat 18:43]--[2019-03-23 Sat 18:43] =>  0:00
     CLOCK: [2019-03-23 Sat 13:34]--[2019-03-23 Sat 14:48] =>  1:14
     CLOCK: [2019-03-23 Sat 13:09]--[2019-03-23 Sat 13:18] =>  0:09
     CLOCK: [2019-03-22 Fri 20:42]--[2019-03-22 Fri 22:07] =>  1:25
     :END:
The react components not re-rendering on saving is really annoying. Thinking about jumping back to PWA...
Had to refactor some stuff to make it easier to do visual design.
***** TODO Floating action button for playing
      :LOGBOOK:
      CLOCK: [2019-04-15 Mon 18:23]--[2019-04-15 Mon 18:48] =>  0:25
      :END:
***** TODO Better button menu
*** TODO Fix production builds

Solution right now is not to use on ~shadow-cljs watch app~ to compile code not ~shadow-cljs release app~.
There were rumblings about suing a metro patch to fix the error that occurs with release.
Also consider using ~:infer-externs :auto~ in shadow build configuration.

***** Patch

 #+begin_src diff
 --- worker.js    2018-11-21 14:46:01.271844624 -0700
 +++ worker.js    2018-11-21 14:45:52.517615272 -0700
 @@ -218,7 +218,7 @@
      }
 
      if (!options.transformOptions.dev) {
 -      plugins.push([constantFoldingPlugin, opts]);
 +      // plugins.push([constantFoldingPlugin, opts]);
        plugins.push([inlinePlugin, opts]);
      }var _transformFromAstSync =
 #+end_src

*** TODO Multiple in-play at once
*** TODO Migrations of app-db
** DOSUB Dog food
*** TODO Make data collapsible
*** TODO Default filters

- today
- planned
- actual

*** TODO Stackable filters
*** TODO Preserve ordering of data keys
*** TODO Data view modal on info section
*** TODO Quick add on day view

- Modals for selecting bucket or templates
- Press and drag for duration

*** TODO Add bucket color in selection on period form
*** TODO Add duration indication to period form (graphical?)
*** TODO Move end to now
*** TODO Add exit to modals
*** TODO Play from new vs play from end
*** TODO Play from should change displayed day
*** TODO Add port indicator

The export dialog takes awhile to pop up.

*** TODO Create template from period
*** TODO Play from id added to new period
*** TODO Snap to hour and surrounding periods
*** TODO Free text or better data

Maybe checklists that are easy to get to

*** TODO Copy to next (today?) day plan
*** TODO From last to now
*** TODO Play button outside selection
*** TODO Notifications

Get notified with options to adjust plan (snooze) or start a timer.

*** TODO Dont show stop time when in play
*** TODO Select closest period

Convert touch to time and select the closest period.

*** TODO Add as start now or as stop now
*** TODO Things hard to do

- make new buckets
- make new templates
- add a template to now
- stretch shrink a period
See

*** TODO Order tamplates by last usage or edit
*** TODO Entry ui

Long press to activate. Drag and release to set start, drag and release to set stop.

*** TODO Insert and shift

Start on start and shift down or stop on stop and shift up

*** TODO Zoom in
*** TODO Jump to start stop
*** TODO Template group

A group of period templates that can be added at the same time.

*** TODO New starting after/ending  before
*** TODO Jump to playing when another period is selected
*** TODO Jump to today
*** TODO Cancel add period on each modal
*** TODO Back button should navigate to last screen
    :LOGBOOK:
    CLOCK: [2018-08-18 Sat 14:51]--[2018-08-18 Sat 14:56] =>  0:05
    :END:
https://github.com/Day8/re-frame-undo
https://facebook.github.io/react-native/docs/backhandler#docsNav

*** TODO Better start stop indicator on day view

Remove the start, and stop from the button section.
Add horizontal bars (like the now indicator) sandwiching the period with ~hh:mm~ on them.

*** TODO Remove offset from time stamp form fields
*** TODO Show only first six digits of id with a modal on press for the full value
    :LOGBOOK:
    CLOCK: [2019-03-17 Sun 16:29]--[2019-03-17 Sun 16:29] =>  0:00
    :END:

*** DOSUB [#A] Template a day
    :LOGBOOK:
    CLOCK: [2019-04-19 Fri 16:30]--[2019-04-19 Fri 16:47] =>  0:17
    CLOCK: [2019-04-17 Wed 17:19]--[2019-04-17 Wed 17:19] =>  0:00
    CLOCK: [2019-04-17 Wed 16:23]--[2019-04-17 Wed 16:33] =>  0:10
    CLOCK: [2019-04-16 Tue 13:30]--[2019-04-16 Tue 14:30] =>  1:00
    :END:
**** DOSUB After sketch 
***** TODO Planning
      :LOGBOOK:
      CLOCK: [2019-05-05 Sun 14:45]--[2019-05-05 Sun 16:11] =>  1:26
      CLOCK: [2019-05-04 Sat 15:27]--[2019-05-04 Sat 17:26] =>  1:59
      CLOCK: [2019-05-04 Sat 12:53]--[2019-05-04 Sat 13:45] =>  0:52
      CLOCK: [2019-05-04 Sat 12:09]--[2019-05-04 Sat 12:12] =>  0:03
      CLOCK: [2019-04-28 Sun 20:03]--[2019-04-28 Sun 20:39] =>  0:36
      CLOCK: [2019-04-28 Sun 17:57]--[2019-04-28 Sun 18:51] =>  0:54
      CLOCK: [2019-04-28 Sun 15:00]--[2019-04-28 Sun 15:03] =>  0:03
      CLOCK: [2019-04-28 Sun 14:53]--[2019-04-28 Sun 14:59] =>  0:06
      CLOCK: [2019-04-28 Sun 12:48]--[2019-04-28 Sun 13:14] =>  0:26
      CLOCK: [2019-04-28 Sun 11:45]--[2019-04-28 Sun 12:22] =>  0:37
      CLOCK: [2019-04-27 Sat 19:33]--[2019-04-27 Sat 20:27] =>  0:54
      CLOCK: [2019-04-27 Sat 18:07]--[2019-04-27 Sat 18:26] =>  0:19
      CLOCK: [2019-04-27 Sat 16:29]--[2019-04-27 Sat 16:30] =>  0:01
      CLOCK: [2019-04-27 Sat 15:35]--[2019-04-27 Sat 15:37] =>  0:02
      CLOCK: [2019-04-27 Sat 14:32]--[2019-04-27 Sat 14:47] =>  0:15
      CLOCK: [2019-04-26 Fri 22:17]--[2019-04-26 Fri 23:47] =>  1:30
      CLOCK: [2019-04-25 Thu 21:40]--[2019-04-25 Thu 22:21] =>  0:41
      CLOCK: [2019-04-24 Wed 21:15]--[2019-04-24 Wed 23:37] =>  2:22
      CLOCK: [2019-04-23 Tue 16:39]--[2019-04-23 Tue 17:38] =>  0:59
      CLOCK: [2019-04-23 Tue 16:15]--[2019-04-23 Tue 16:16] =>  0:01
      CLOCK: [2019-04-23 Tue 15:52]--[2019-04-23 Tue 16:00] =>  0:08
      CLOCK: [2019-04-23 Tue 14:05]--[2019-04-23 Tue 14:37] =>  0:32
      :END:
- [X] Screen stub
- [ ] Nav
  - [X] Navigation.cljs
  - [ ] Handlers ~:navigate-to~
    - Might have to one day load the form again
  - [X] Temporary drawer item
- [X] Subs
- [ ] Screen
  - [X] Dimension awareness
  - [X] Time indicators
  - [X] Template rendering
  - [X] Top bar (pattern label)
  - [ ] Bottom bar
    - [X] Back to pattern form
    - [X] Save pattern form
      - [X] Get pattern form changes sub
        - It was already done
    - [ ] Apply pattern form to day
  - [X] Selection menu
    - [X] Ability to select
    - [X] Selection menu buttons
      - [X] Copy over relevant day buttons
      - [X] Translate period buttons to pattern form updates
        - [X] Fix template start/stop data model
          - Should probably be ms of 24 hours and then parse into a date time
          - [X] Update app.db specs and default
          - [X] Handlers
          - [X] Search ~start~ ~stop~
          - [X] Compile it
          - [X] Functional test
        - [X] Rest of the buttons
          - [X] Select next or prev button
            - [X] Fix template form
              - [X] Start stop comps
              - [X] Bucket label parent picker comp
            - [X] Test in repl
- [ ] Pattern form component (link to screen)
- [ ] Apply pattern to day in ?pattern list?
- [ ] Remove stub menu entry
*** TODO Put something between two selected periods
*** TODO Plugin style other app linking (walking amd strava)
*** TODO Move left and right (next prev day)
*** TODO Template groups relative start

Either have all start times be absolute or relative. Maybe an option when creating the group.

*** TODO Long press to place a default

Long pressing shouldn't bring you to the edit screen, double tapping should.

** DOSUB Predicting
*** TODO look into markov chains
** DOSUB Technical debt
*** TODO Fully namespaced keywords
This is needed for serious refactoring
*** TODO Unit tests
- handlers
- subscriptions
- helper functions
*** TODO Spec'd functions
Opens up for better dev experience and generative testing
